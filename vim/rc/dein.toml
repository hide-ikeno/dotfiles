#------------------------------------------------------------------------------
# Plugin manager
#------------------------------------------------------------------------------
[[plugins]]
repo = 'Shougo/dein.vim'

#------------------------------------------------------------------------------
# Functions and commands for Neovim GUI
#------------------------------------------------------------------------------
[[plugins]]
repo = 'equalsraf/neovim-gui-shim'

#------------------------------------------------------------------------------
# Remote Plugin Framework
#------------------------------------------------------------------------------
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
repo = 'https://github.com/roxma/nvim-yarp'

#------------------------------------------------------------------------------
# Fast matcher for CtrlP and Denite
#------------------------------------------------------------------------------
[[plugins]]
repo  = 'nixprime/cpsm'
build = 'sh -c "PY3=ON ./install.sh"'

#------------------------------------------------------------------------------
# Utilities
#------------------------------------------------------------------------------
[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
# Faster than the built-in 'matchparen' plugin
repo = 'itchyny/vim-parenmatch'

[[plugins]]
repo     = 'itchyny/vim-cursorword'
hook_add = '''
  augroup cursorword-filetype
    autocmd!
    autocmd FileType qf,denite,unite,vimfiler,quickrun,calendar let b:cursorword = 0
    autocmd InsertEnter * let b:cursorword = 0
    autocmd InsertLeave * let b:cursorword = 1
  augroup END
'''
#------------------------------------------------------------------------------
# Lightline + Colorscheme
#------------------------------------------------------------------------------
# Configurable statusline/tabline (lighter than powerline and vim-airline)
[[plugins]]
repo = 'itchyny/lightline.vim'

# Add filetype glyphs (icons) to other plugins
[[plugins]]
repo = 'ryanoasis/vim-devicons'

# Create tmux powerline theme from vim powerline theme
# (requires powerline/vim-airline/lightline)
[[plugins]]
repo = 'edkolev/tmuxline.vim'

#  Dracula
[[plugins]]
repo = 'dracula/vim'
name = 'dracula'

#  Iceberg -- with lightline colorscheme
[[plugins]]
repo = 'cocopon/iceberg.vim'

#  gruvbox -- truecolor support with lightline colorscheme
[[plugins]]
repo = 'morhetz/gruvbox'

#  tender -- truecolor support with lightline colorscheme
[[plugins]]
repo = 'jacoborus/tender.vim'

#  onedark -- truecolor support with lightline colorscheme
[[plugins]]
repo = 'joshdick/onedark.vim'

#  neodark -- truecolor support with lightline colorscheme
[[plugins]]
repo = 'KeitaNakamura/neodark.vim'

#------------------------------------------------------------------------------
# Vim help in Japanese
#------------------------------------------------------------------------------
[[plugins]]
repo     = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'

# Introduction of VIM script
repo = 'mattn/learn-vimscript'

#------------------------------------------------------------------------------
# Filer
#------------------------------------------------------------------------------
repo = 'cocopon/vaffle.vim'
hook_add = '''
  " Changes the working directory to the selected one automatically
  let g:vaffle_auto_cd = 1

  function! s:customize_vaffle_mappings() abort
    " Customize key mappings here
    nmap <buffer> <Bslash> <Plug>(vaffle-open-root)
    nmap <buffer> l        <Plug>(vaffle-open-selected)
  endfunction

  augroup vimrc_vaffle
    autocmd!
    autocmd FileType vaffle call s:customize_vaffle_mappings()
  augroup END

  nnoremap <silent> <Space>fe :<C-u>Vaffle<CR>
'''

#------------------------------------------------------------------------------
# Highlight
#------------------------------------------------------------------------------
[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

#------------------------------------------------------------------------------
# Textobj extensions
#------------------------------------------------------------------------------
[[plugins]]
repo = 'kana/vim-textobj-user'

# [[plugins]]
# repo = 'kana/vim-textobj-line'
# depends = 'vim-textobj-user'

# [[plugins]]
# repo = 'kana/vim-textobj-entire'
# depends = 'vim-textobj-user'

[[plugins]]
repo = 'machakann/vim-textobj-delimited'

#------------------------------------------------------------------------------
# Operator extensions
#------------------------------------------------------------------------------
[[plugins]]
repo = 'kana/vim-operator-user'

#------------------------------------------------------------------------------
# Enhanced commands
#------------------------------------------------------------------------------
# powerful repeat '.'
[[plugins]]
repo = 'tpope/vim-repeat'

#------------------------------------------------------------------------------
# Folding
#------------------------------------------------------------------------------
[[plugins]]
repo = 'LeafCage/foldCC.vim'

#------------------------------------------------------------------------------
# For programming
#------------------------------------------------------------------------------
# --- EditorConfig
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
  let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
'''

# --- Git
[[plugins]]
repo = 'airblade/vim-gitgutter'
if = 'has("signs")'
hook_add = '''
  nmap <silent> <Space>gk  <Plug>GitGutterPrevHunkzz
  nmap <silent> <Space>gj  <Plug>GitGutterNextHunkzz
  nmap <silent> <Space>gp  <Plug>GitGutterNextHunkzz
'''

# --- linter
[[plugins]]
repo = 'w0rp/ale'

# Lightline component for ALE status
[[plugins]]
repo     = 'maximbaz/lightline-ale'
hook_add = '''
  " Set icon font
  let g:lightline#ale#indicator_warnings = "\uf071"
  let g:lightline#ale#indicator_errors   = "\uf00d"
  let g:lightline#ale#indicator_ok       = "\uf00c"
'''

# --- Auto format
repo = 'Chiel92/vim-autoformat'
hook_add = '''
  let g:formatter_yapf_style = 'pep8'
  " For debug
  " let g:autoformat_verbosemode = 1

  nnoremap <silent> <Space>m= :<C-u>Autoformat<CR>
'''

# --- Snippet definitions for neosnippet
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

#------------------------------------------------------------------------------
# Filetype & Syntax
#------------------------------------------------------------------------------
[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'

[[plugins]]
repo = 'rust-lang/rust.vim'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'elzr/vim-json'

[[plugins]]
repo = 'stephpy/vim-yaml'

[[plugins]]
repo = 'rcmdnk/vim-markdown'
hook_add = '''
  let g:vim_markdown_frontmatter = 1
  let g:vim_markdown_math = 1
  let g:vim_markdown_conceal = 0
'''

[[plugins]]
repo = 'thinca/vim-ft-diff_fold'

[[plugins]]
repo = 'thinca/vim-ft-help_fold'

[[plugins]]
repo = 'kballard/vim-fish'

[[plugins]]
repo = 'chrisbra/vim-zsh'


#------------------------------------------------------------------------------
# Leader guide
#------------------------------------------------------------------------------
[[plugins]]
repo = 'hecal3/vim-leader-guide'
hook_add = '''
  " register it with the guide:
  call leaderGuide#register_prefix_descriptions("<Space>", "g:lmap")
  call leaderGuide#register_prefix_descriptions(",", "g:llmap")

  nnoremap <silent> <Space>  :<C-u>LeaderGuide       '<Space>'<CR>
  vnoremap <silent> <Space>  :<C-u>LeaderGuideVisual '<Space>'<CR>
  map               <Space>.  <Plug>leaderguide-global
  map               <Space>,  <Plug>leaderguide-buffer
'''

