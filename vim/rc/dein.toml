# === Plugins (loaded on startup) ===

#------------------------------------------------------------------------------
# Plugin manager
#------------------------------------------------------------------------------
[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
  " --- U mapping
  nnoremap <silent> <Space>up :<C-u>call dein#clear_state()<CR>:UpdateRemotePlugins<CR>
  nnoremap <silent> <Space>uP :<C-u>call dein#update()<CR>
'''

#------------------------------------------------------------------------------
# Functions and commands for Neovim GUI
#------------------------------------------------------------------------------
[[plugins]]
repo  = 'equalsraf/neovim-gui-shim'
if = 'has("nvim")'

#------------------------------------------------------------------------------
# Remote Plugin Framework
#------------------------------------------------------------------------------
# for Vim 8
[[plugins]]
repo  = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'https://github.com/roxma/nvim-yarp'

#------------------------------------------------------------------------------
# Fast matcher for CtrlP and Denite
#------------------------------------------------------------------------------
[[plugins]]
repo  = 'nixprime/cpsm'
build = 'sh -c "PY3=ON ./install.sh"'

#------------------------------------------------------------------------------
# Utilities
#------------------------------------------------------------------------------
# Enable configuration file in each directory
[[plugins]]
repo = 'thinca/vim-localrc'

# Faster than the built-in 'matchparen' plugin
[[plugins]]
repo = 'itchyny/vim-parenmatch'

# [[plugins]]
# repo     = 'itchyny/vim-cursorword'
# hook_add = '''
#   augroup cursorword-filetype
#     autocmd!
#     autocmd FileType qf,denite,unite,vimfiler,quickrun,calendar let b:cursorword = 0
#     autocmd InsertEnter * let b:cursorword = 0
#     autocmd InsertLeave * let b:cursorword = 1
#   augroup END
# '''

#------------------------------------------------------------------------------
# Lightline + Colorscheme
#------------------------------------------------------------------------------
# Add filetype glyphs (icons) to other plugins
[[plugins]]
repo = 'ryanoasis/vim-devicons'

# Create tmux powerline theme from vim powerline theme
# (requires powerline/vim-airline/lightline)
[[plugins]]
repo = 'edkolev/tmuxline.vim'

#  Dracula
[[plugins]]
repo = 'dracula/vim'
name = 'dracula'

#  Iceberg -- with lightline colorscheme
[[plugins]]
repo = 'cocopon/iceberg.vim'

#  gruvbox -- truecolor support with lightline colorscheme
[[plugins]]
repo = 'morhetz/gruvbox'

#  tender -- truecolor support with lightline colorscheme
[[plugins]]
repo = 'jacoborus/tender.vim'

#  onedark -- truecolor support with lightline colorscheme
[[plugins]]
repo = 'joshdick/onedark.vim'

#  neodark -- truecolor support with lightline colorscheme
[[plugins]]
repo = 'KeitaNakamura/neodark.vim'

#------------------------------------------------------------------------------
# Vim help in Japanese
#------------------------------------------------------------------------------
[[plugins]]
repo     = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'

# Introduction of VIM script
[[plugins]]
repo = 'mattn/learn-vimscript'

#------------------------------------------------------------------------------
# Enhanced commands
#------------------------------------------------------------------------------
# powerful repeat '.'
[[plugins]]
repo = 'tpope/vim-repeat'

#------------------------------------------------------------------------------
# For programming
#------------------------------------------------------------------------------
# --- EditorConfig
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
  let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
'''

# --- Snippet definitions for neosnippet
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

#------------------------------------------------------------------------------
# Leader guide
#------------------------------------------------------------------------------
[[plugins]]
repo = 'hecal3/vim-leader-guide'
hook_add = '''
  " register it with the guide:
  call leaderGuide#register_prefix_descriptions("<Space>", "g:lmap")
  call leaderGuide#register_prefix_descriptions(",", "g:llmap")

  nnoremap <silent> <Space>  :<C-u>LeaderGuide       '<Space>'<CR>
  vnoremap <silent> <Space>  :<C-u>LeaderGuideVisual '<Space>'<CR>
  map               <Space>.  <Plug>leaderguide-global
  map               <Space>,  <Plug>leaderguide-buffer
'''

# === No meaning lazy plugins ===

# --- Textobj extension
[[plugins]]
repo = 'kana/vim-textobj-user'

# --- Operator extension
[[plugins]]
repo = 'kana/vim-operator-user'

# --- Find fenced code blocks and filetype
#     (e.g., Javascript blocks inside HTML)
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# --- C++
[[plugins]]
repo  = 'octol/vim-cpp-enhanced-highlight'
on_ft = 'cpp'

# --- Python
[[plugins]]
repo  = 'vim-python/python-syntax'
on_ft = 'python'

[[plugins]]
# extend % and g% for python
repo  = 'vim-scripts/python_match.vim'
on_ft = 'python'

# --- diff
[[plugins]]
repo  = 'thinca/vim-ft-diff_fold'

# --- help
[[plugins]]
repo  = 'thinca/vim-ft-help_fold'

# --- CSS
[[plugins]]
repo  = 'hail2u/vim-css3-syntax'

# --- JSON
[[plugins]]
repo  = 'elzr/vim-json'
on_ft = 'json'

# --- YAML
[[plugins]]
repo  = 'stephpy/vim-yaml'
on_ft = 'yaml'

# --- Docker files
[[plugins]]
repo  = 'ekalinin/Dockerfile.vim'
on_ft = ['Dockerfile', 'docker-compose']

# --- fish
[[plugins]]
repo  = 'kballard/vim-fish'
on_ft = 'fish'

# --- zsh
[[plugins]]
repo  = 'chrisbra/vim-zsh'
on_ft = 'zsh'

# --- tmux
[[plugins]]
repo  = 'tmux-plugins/vim-tmux'
on_ft = 'tmux'

# --- vim
[[plugins]]
repo  = 'vim-jp/syntax-vim-ex'
on_ft = 'vim'
