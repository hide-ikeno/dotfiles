[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
on_event = 'TextYankPost'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" : 
    \ neosnippet#expandable_or_jumpable() ?
    \   "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
on_ft = ['snippet']
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'neoyank.vim']
if = 'has("nvim")'
on_event = 'BufRead'
hook_add = '''
  nnoremap [denite] <Nop>
  nmap <C-u> [denite]
  nmap <silent> [denite]<C-t> : <C-u>Denite filetype<CR>
  nmap <silent> [denite]<C-f> : <C-u>Denite -auto_preview file_rec<CR>
  nmap <silent> [denite]<C-y> : <C-u>Denite neoyank<CR>
  nmap <silent> [denite]<C-g> : <C-u>Denite grep -mode=normal -buffer-name=search-buffer-denite<CR>
  nmap <silent> [denite]<C-r> : <C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
  nmap <silent> [denite]<C-n> : <C-u>Denite -resume -buffer-name=search-buffer-denite -select=+1 -immediately<CR>
  nmap <silent> [denite]<C-p> : <C-u>Denite -resume -buffer-name=search-buffer-denite -select=-1 -immediately<CR>
'''
hook_post_source = '''
  call denite#custom#map('insert', '<C-j>', '<denite:move_to_next_line>',  'noremap')
  call denite#custom#map('insert', '<C-k>', '<denite:move_to_previous_line>', 'noremap')

  if executable('rg')
    call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!.git', ''])
    call denite#custom#var('grep', 'command', ['rg'])
    call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'final_opt', [])
  else
    call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
    call denite#custom#var('grep', 'command', ['ag'])
    call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'final_opt', [])
  endif

  " Change matchers
  call denite#custom#source('file_mru', 'matchers', ['matcher_fuzzy', 'matcher_project_files'])
  call denite#custom#source('file_rec', 'matchers', ['matcher_cpsm'])
  " Change sorters
  call denite#custom#source('file_rec', 'sorters', ['sorter_sublime'])

  " Change converters
  call denite#custom#source('file_mru', 'converters', ['converter_relative_word'])

  " Define alias
  call denite#custom#alias('source', 'file_rec/git', 'file_rec')
  call denite#custom#var('file_rec/git', 'command',
    \ ['git', 'ls-files', '-co', '--exclude-standard'])

  " Change default prompt
  call denite#custom#option('default', 'prompt', '>')

  " Change ignore_globs
  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
    \ [ '.git/', '.ropeproject/', '__pycache__/',
    \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])
'''

[[plugins]]
repo = 'Jagua/vim-denite-ghq'
depends = ['denite.nvim']

[[plugins]]
repo = 'neomake/neomake'
depends = ['vimproc.vim']
if = 'has("nvim")'
hook_add = '''
  autocmd! BufWritePost * Neomake
  let g:neomake_python_enabled_makers = ['python', 'flake8']
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
depends = ['deoplete.nvim']
if = 'has("nvim")'
on_ft = ['c', 'cpp', 'cmake']
hook_source = '''
  let g:deoplete#sources#clang#libclang_path = '/usr/local/opt/llvm/lib/libclang.dylib'
  let g:deoplete#sources#clang#clang_header = '/usr/loca/opt/llvm/lib/clang'
'''

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp', 'cmake']
hook_source = '''
  let g:clang_format#detect_style_file = 1
  let g:clang_format#auto_format = 1
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = ['deoplete.nvim']
if = 'has("nvim")'
on_ft = ['python']

[[plugins]]
repo = 'cjrh/vim-conda'
on_ft = ['python']

