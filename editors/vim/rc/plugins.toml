# === Plugins (loaded on startup) ===

#------------------------------------------------------------------------------
# Plugin manager
#------------------------------------------------------------------------------
# Dark powered Vim/Neovim plugin manager
[[plugins]]
repo = 'Shougo/dein.vim'

# Utility commands for dein.vim
[[plugins]]
repo = 'haya14busa/dein-command.vim'
depends = ['dein.vim']

#------------------------------------------------------------------------------
# Utilities
#------------------------------------------------------------------------------
# Enable configuration file in each directory
[[plugins]]
repo = 'thinca/vim-localrc'

# Faster than the built-in 'matchparen' plugin
[[plugins]]
repo = 'itchyny/vim-parenmatch'
#if = 'has("gui_running")'

# [[plugins]]
# repo     = 'itchyny/vim-cursorword'
# hook_add = '''
#   augroup cursorword-filetype
#     autocmd!
#     autocmd FileType qf,denite,unite,vimfiler,quickrun,calendar let b:cursorword = 0
#     autocmd InsertEnter * let b:cursorword = 0
#     autocmd InsertLeave * let b:cursorword = 1
#   augroup END
# '''

# Powerful repeat '.'
[[plugins]]
repo = 'tpope/vim-repeat'

# Visually displaying indent levels with thin vertical lines
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_enable = 1
  let g:indentLine_char = 'Â¦'
'''

# Better whitespace highlighting for Vim
[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
hook_add = '''
  let g:better_whitespace_enabled = 1
  let g:strip_whitespace_on_save  = 1
  let g:show_spaces_that_precede_tabs = 1
  let g:better_whitespace_filetypes_blacklist = [
      \ 'diff', 'gitcommit', 'denite', 'qf', 'help', 'markdown'
      \ ]
'''

# EditorConfig
[[plugins]]
repo = 'editorconfig/editorconfig-vim'
if = 'executable("editorconfig")'
hook_add = '''
  let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
'''

# Seemless navitation between Tmux and Vim
[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
  let g:tmux_navigator_no_mappings = 1
  nnoremap <silent><M-h>  :<C-u>TmuxNavigateLeft<CR>
  nnoremap <silent><M-j>  :<C-u>TmuxNavigateDown<CR>
  nnoremap <silent><M-k>  :<C-u>TmuxNavigateUp<CR>
  nnoremap <silent><M-l>  :<C-u>TmuxNavigateRight<CR>
  nnoremap <silent><M-\>  :<C-u>TmuxNavigatePrevious<CR>
'''

# Find fenced code blocks and filetype (e.g., Javascript blocks inside HTML)
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# Functions and commands for Neovim GUI
[[plugins]]
repo = 'equalsraf/neovim-gui-shim'
if = 'has("nvim")'

# Remote Plugin Framework
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/nvim-yarp'

#------------------------------------------------------------------------------
# Themes
#------------------------------------------------------------------------------
# Custom status line
[[plugins]]
repo = 'itchyny/lightline.vim'

# Display 256 xterm colors with RGB equivalents
[[plugins]]
repo = 'guns/xterm-color-table.vim'

# Add filetype glyphs (icons) to other plugins
[[plugins]]
repo = 'ryanoasis/vim-devicons'

#  Dracula
[[plugins]]
repo = 'dracula/vim'
name = 'dracula'

# #  gruvbox
# [[plugins]]
# repo = 'morhetz/gruvbox'

# #  Oceanic-Next
# [[plugins]]
# repo = 'mhartington/oceanic-next'

#  onedark
[[plugins]]
repo = 'joshdick/onedark.vim'

#  one
[[plugins]]
repo = 'rakr/vim-one'

# #  neodark
# [[plugins]]
# repo = 'KeitaNakamura/neodark.vim'

# #  PaperColor
# [[plugins]]
# repo = 'NLKNguyen/papercolor-theme'

#------------------------------------------------------------------------------
# Plugins for completion
#------------------------------------------------------------------------------
# --- Snippet definitions for neosnippet
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# --- Completion by `look` command for neocomplete/deoplete/ncm
[[plugins]]
repo = 'ujihisa/neco-look'
if = 'executable("look")'

# --- syntax source for neocomplete/deoplete/ncm
[[plugins]]
repo = 'Shougo/neco-syntax'

#------------------------------------------------------------------------------
# Syntax, filetype (not necessary for lazy loading)
#------------------------------------------------------------------------------
# --- C++
[[plugins]]
repo = 'bfrg/vim-cpp-modern'

# --- Python
[[plugins]]
repo = 'vim-python/python-syntax'

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'

[[plugins]]
# extend % and g% for python
repo = 'vim-scripts/python_match.vim'

# --- Lua
[[plugins]]
repo = 'tbastos/vim-lua'

# --- diff
[[plugins]]
repo = 'thinca/vim-ft-diff_fold'

# --- help
[[plugins]]
repo = 'thinca/vim-ft-help_fold'

# --- CSS
[[plugins]]
repo = 'hail2u/vim-css3-syntax'

# --- JSON
[[plugins]]
repo = 'elzr/vim-json'
hook_add = '''
  let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'neoclide/jsonc.vim'

# --- YAML
[[plugins]]
repo = 'stephpy/vim-yaml'

# --- TOML
[[plugins]]
repo = 'cespare/vim-toml'

# --- Docker files
[[plugins]]
repo = 'ekalinin/Dockerfile.vim'

# --- Fish
[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

# --- zsh
[[plugins]]
repo = 'chrisbra/vim-zsh'

# --- GNU As
[[plugins]]
repo = 'Shirk/vim-gas'

# --- vim
[[plugins]]
repo = 'vim-jp/syntax-vim-ex'

# --- tmux
[[plugins]]
repo = 'tmux-plugins/vim-tmux'

# --- nginx configuration (fork official nvim nginx)
[[plugins]]
repo = 'othree/nginx-contrib-vim'

#------------------------------------------------------------------------------
# Textobj/operator extension
#------------------------------------------------------------------------------
# Operator extension
[[plugins]]
repo = 'kana/vim-operator-user'

# Textobj extension
[[plugins]]
repo = 'kana/vim-textobj-user'

