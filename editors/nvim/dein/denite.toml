# Dark powered asynchronous unite all interfaces for Neovim/Vim8
[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['fruzzy', 'vim-devicons']
on_cmd = ['Denite', 'DeniteBufferDir', 'DeniteCursorWord', 'DeniteProjectDir']
on_func = ['denite#']

hook_add = '''
  " Replace default search mappings
  nnoremap <expr> / line('$') > 10000 ? '/' :
        \ ":\<C-u>Denite -buffer-name=search -start-filter line\<CR>"
  nnoremap <expr> n line('$') > 10000 ? 'n' :
        \ ":\<C-u>Denite -buffer-name=search -resume -refresh -no-start-filter\<CR>"
  nnoremap <expr> * line('$') > 10000 ? '*' :
        \ ":\<C-u>DeniteCursorWord -buffer-name=search line\<CR>"
  xnoremap <silent> *
        \ "qy:Denite -input=`@q` -buffer-name=search -search line<CR>

  " <Space> mappings
  nnoremap <silent> <Space>b  :<C-u>Denite buffer file_mru -default-action=switch<CR>
  nnoremap <silent> <Space>f  :<C-u>Denite file/point file/old -sorters=sorter/rank
        \ `finddir('.git', ';') != '' ? 'file/rec/git' : 'file/rec'` file file:new<CR>
  nnoremap <silent> <Space>h  :<C-u>Denite help<CR>
  nnoremap <silent> <Space>l  :<C-u>Denite location_list<CR>
  nnoremap <silent> <Space>q  :<C-u>Denite quickfix<CR>
  nnoremap <silent> <Space>r  :<C-u>Denite -resume -refresh -no-start-filter<CR>

  nnoremap <silent> <Space>/  :<C-u>Denite -buffer-name=search -no-empty grep<CR>
  nnoremap <silent> <Space>*  :<C-u>DeniteCursorWord -buffer-name=search -no-empty grep<CR>

  nnoremap <silent><expr> <Space>]  &filetype == 'help' ?  "g\<C-]>" :
        \ ":\<C-u>DeniteCursorWord -buffer-name=tag -immediately tag:include\<CR>"
  nnoremap <silent><expr> <Space>[  &filetype == 'help' ?
        \ ":\<C-u>pop\<CR>" : ":\<C-u>Denite jump\<CR>"

  " <Leader> mappings
  nnoremap <silent> <Leader>r
        \ :<C-u>Denite -buffer-name=register register neoyank<CR>
  xnoremap <silent> <Leader>r
        \ :<C-u>Denite -default-action=replace -buffer-name=register register neoyank<CR>
  nnoremap <silent> <Leader><Leader>  :<C-u>Denite command command_history<CR>
'''

hook_source = '''
  let s:ignore_globs = [ '.git/', '.ropeproject/', '__pycache__/', 'venv/',
        \ 'node_modules', 'images/', '*.min.*', 'img/', 'fonts/']

  " command for find file
  if executable('fd')
    call denite#custom#var('file/rec', 'command',
          \ ['fd', '--follow', '--hidden', '--color=never']
          \ + map(deepcopy(s:ignore_globs), { k, v -> '--exclude=' . v }))
  elseif executable('rg')
    call denite#custom#var('file/rec', 'command',
          \ ['rg', '--follow', '--hidden', '--files']
          \ + map(deepcopy(s:ignore_globs), { k, v -> '--glob=!' . v }))
  elseif executable('ag')
    call denite#custom#var('file/rec', 'command',
          \ ['ag', '-U', '--hidden', '--follow']
          \ + map(deepcopy(s:ignore_globs), { k, v -> '--ignore=' . v })
          \ + ['--nocolor', '--nogroup', '-g', ''])
  endif

  " command for grep
  if executable('rg')
    call denite#custom#var('grep', 'command', ['rg', '--threads', '1'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'final_opts', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep', '--no-heading'])
  elseif executable('ag')
    call denite#custom#var('grep', 'command', ['ag'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'final_opts', [])
    call denite#custom#var('grep', 'default_opts',
          \ [ '--skip-vcs-ignores', '--vimgrep', '--smart-case', '--hidden' ])
  elseif executable('ack')
    " Ack command
    call denite#custom#var('grep', 'command', ['ack'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', ['--match'])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'final_opts', [])
    call denite#custom#var('grep', 'default_opts',
          \ ['--ackrc', $HOME.'/.config/ackrc', '-H',
          \ '--nopager', '--nocolor', '--nogroup', '--column'])
  endif

  " custom options
  call denite#custom#source('file/old', 'matchers',
        \ ['matcher/fruzzy', 'matcher/project_files'])
  call denite#custom#source('file_mru', 'matchers', ['matcher/fruzzy'])
  call denite#custom#source('file/rec', 'matchers', ['matcher/fruzzy'])
  call denite#custom#source('tag', 'matchers', ['matcher/substring'])
  call denite#custom#source('file/old,ghq', 'converters',
        \ ['devicons_denite_converter', 'converter/relative_word', 'converter/relative_abbr'])
  call denite#custom#source('file,file/rec,file_mru,buffer,directory/rec,directory_mru',
        \ 'converters', ['devicons_denite_converter'])

  call denite#custom#alias('source', 'file/rec/git', 'file/rec')
  call denite#custom#var('file/rec/git', 'command',
        \ ['git', 'ls-files', '-co', '--exclude-standard'])


  let s:denite_win_width_percent = 0.85
  let s:denite_win_height_percent = 0.7
  call denite#custom#option('default', {
        \ 'highlight_filter_background': 'CursorLine',
        \ 'prompt': '> ',
        \ 'source_names': 'short',
        \ 'split': 'floating',
        \ 'filter_split_direction': 'floating',
        \ 'virtical_preview': v:true,
        \ 'floating_preview': v:true,
        \ 'winwidth': float2nr(&columns * s:denite_win_width_percent),
        \ 'wincol': float2nr((&columns - (&columns * s:denite_win_width_percent)) / 2),
        \ 'winheight': float2nr(&lines * s:denite_win_height_percent),
        \ 'winrow': float2nr((&lines - (&lines * s:denite_win_height_percent)) / 2),
        \ })

  let s:menus = {}
  let s:menus.vim = {
       \ 'description': 'Vim',
       \ }
  let s:menus.vim.file_candidates = [
       \ ['    > Edit configuation file (init.vim)', $VIM_CONFIG_HOME . '/init.vim']
       \ ]

  call denite#custom#var('menu', 'menus', s:menus)

  call denite#custom#filter('matcher/ignore_globs', 'ignore_globs', s:ignore_globs)
'''

[plugins.ftplugin]
denite = '''
  setlocal winblend=20
  setlocal signcolumn=no cursorline

  nnoremap <silent><buffer><expr>         <CR>    denite#do_map('do_action')
  nnoremap <silent><buffer><expr>         a       denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr>         i       denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr>         /       denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr>         '       denite#do_map('quick_move')
  nnoremap <silent><buffer><expr>         p       denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr>         q       denite#do_map('quit')
  nnoremap <silent><buffer><expr>         r       denite#do_map('redraw')
  nnoremap <silent><buffer><expr>         dd      denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr>         yy      denite#do_map('do_action', 'yank')
  nnoremap <silent><buffer><expr>         <Esc>   denite#do_map('quit')
  nnoremap <silent><buffer><expr>         <Tab>   denite#do_map('choose_action')
  nnoremap <silent><buffer><expr><nowait> <Space> denite#do_map('toggle_select').'j'
  nnoremap <silent><buffer><expr>         <C-n>   'j'
  nnoremap <silent><buffer><expr>         <C-p>   'k'
'''

denite_filter = '''
  setlocal winblend=20
  setlocal signcolumn=yes nocursorline nonumber norelativenumber

  nmap <silent><buffer> <C-g> <Plug>(denite_filter_quit)
  imap <silent><buffer> <C-g> <Plug>(denite_filter_quit)
  nmap <silent><buffer> <C-c> <Plug>(denite_filter_quit)
  imap <silent><buffer> <C-c> <Plug>(denite_filter_quit)
'''

# External denite.nvim mathcer
[[plugins]]
repo = 'raghur/fruzzy'
on_source = ['denite.nvim']
hook_source = '''
  let g:fruzzy#usenative   = 1
  let g:fruzzy#sortonempty = 0
'''
hook_post_update = 'call fruzzy#install()'

# register/yank for denite
[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']

# MRU
[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['denite.nvim']

# Dark powered shell interface for Neovim
[[plugins]]
repo = 'Shougo/deol.nvim'
on_source = ['denite.nvim']
hook_add = '''
  nnoremap <silent> <Space>'  :<C-u>Deol zsh -no-start-insert -split=horizontal<CR>
  nnoremap <silent> <C-t> :<C-u>Denite -buffer-name=deol -split=floating -cursor-pos=`tabpagenr()-1` deol:zsh<CR>
'''

hook_source = '''
  let g:deol#prompt_pattern = '\w*% '
  let g:deol#shell_history_path = $ZDOTDIR . '/zsh_history'
'''

[plugins.ftplugin]
deol = '''
  nmap <buffer> i      <Plug>(deol_edit)
'''
zsh = '''
  imap <buffer> <C-c>  <Plug>(deol_quit)
'''
